<?php

/**
 * @file
 * FOIA Users Access Module.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\user\Entity\User;

/**
 * Validates Office NID matching for users.
 */
function _office_user_nid_access($node, $account) {
  $user = User::load(\Drupal::currentUser()->id());
  $user_office_field_nid = $user->get('field_foia_office')->getValue();
  $user_nid_array = [];

  foreach ($user_office_field_nid as $key => $val) {
    $user_nid_array[] = $val['target_id'];
  }

  $result = NULL;
  if (in_array($node->get('nid')->getValue()[0]['value'], $user_nid_array)) {
    $result = AccessResult::allowed()->cachePerUser()->addCacheableDependency($node);
  }
  else {
    $result = AccessResult::forbidden()->cachePerUser()->addCacheableDependency($node);
  }
  return $result;
}

/**
 * Implements hook_node_access().
 */
function foia_users_node_access($node, $op, $account) {

  // Restrict editing node based on matching of 'field_agency' entity reference.
  if ($node->bundle() == 'foia_office') {

    $user = User::load(\Drupal::currentUser()->id());
    $user_roles = $user->getRoles();

    if (in_array("foia_office_creator", $user_roles) || in_array("foia_office_reviewer", $user_roles)) {

      if ($op == "delete") {
        // Allow creation before entity ref is set.
        if ($node->get('field_agency')->isEmpty()) {
          return AccessResult::allowed()->cachePerUser()->addCacheableDependency($node);
        }
        else {
          return _office_user_nid_access($node, $account);
        }
      }
      elseif ($op == "update") {
        return _office_user_nid_access($node, $account);
      }
      else {
        return AccessResult::allowed()->cachePerUser()->addCacheableDependency($node);
      }

    }

  }
  return AccessResult::neutral();
}
